
struct Storage<ItemType> {
    data:ItemType;

    func set(self:$Storage<ItemType>, value:ItemType) {
        self.data = value;
        return;
    }

    func get(self:$Storage<ItemType>) ~> ItemType {
        return $self.data;
    }
}

func add<TmpArg>(num1:TmpArg, num2:TmpArg) ~> TmpArg {
    return num1 + num2;
}

export func test(num:i32) ~> i32 {
    let store:Storage<i32>;

    store.set(add?<i32>(num, 1));

    libc_printf(("data: %i\n":$c8), store.get());

    store.set(add?<i32>($store.data, 1));

    libc_printf(("data: %i\n":$c8), store.get());
    
    return store.get();
}